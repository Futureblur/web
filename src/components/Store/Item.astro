---
import type { ImageMetadata } from "astro";
import type { CollectionEntry } from "astro:content";
import Image from "astro/components/Image.astro";

import {
    getTranslatedSlug,
    getLangFromUrl,
    useTranslations,
} from "@i18n/utils";

import { getLocalizedPrice, isNew } from "@lib/store/store-utils";

interface Props {
    item: CollectionEntry<"store">;
}

const { item } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const slug = item.id;

const images = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/store/**/*.{jpg, jpeg, png}",
);

const coverPath = `/src/assets/store/${slug}/cover.jpg`;
if (!images[coverPath]) {
    throw new Error("Cover image path does not exist.");
}
---

<a
    href={getTranslatedSlug(lang, "/store/" + slug)}
    class="inline-flex flex-[40%] flex-col rounded-2xl border-neutral-700 bg-white p-2 md:basis-2/3 lg:flex-initial lg:basis-1/5"
    data-astro-prefetch
>
    <Image
        src={images[coverPath]()}
        alt={"Alt"}
        width={800}
        height={960}
        class="rounded-lg"
    />
    <div class="my-4 mb-3 flex flex-col space-y-12 text-center font-mono">
        <div class="flex flex-col space-y-1.5">
            <span
                class=`text-accent text-xs md:text-sm ${isNew(item.data) && "invisible"}`
                aria-hidden={!isNew(item.data)}
            >
                {t("store.new")}
            </span>
            <span class="text-xs uppercase md:text-base">
                {item.data.shortName}
            </span>
        </div>
        <span class="text-xs md:text-sm">
            {getLocalizedPrice(item.data.price.base.amount, lang)}
        </span>
    </div>
</a>
